### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AffectedRowsOutput {
  count: Int!
}

type Article {
  abstract: String!
  abstractEmbedding: [Float!]!
  authors(after: AuthorWhereUniqueInput, before: AuthorWhereUniqueInput, first: Int, last: Int): [Author!]!
  citation: Int!
  date: DateTime!
  id: String!
  journal: Journal
  name: String!
  tags(after: TagWhereUniqueInput, before: TagWhereUniqueInput, first: Int, last: Int): [Tag!]!
}

input ArticleCreateInput {
  abstract: String!
  abstractEmbedding: ArticleCreateabstractEmbeddingInput
  authors: AuthorCreateNestedManyWithoutArticlesInput
  citation: Int!
  date: DateTime!
  id: String!
  journal: JournalCreateNestedOneWithoutArticlesInput
  name: String!
  tags: TagCreateNestedManyWithoutArticlesInput
}

input ArticleCreateabstractEmbeddingInput {
  set: [Float!]
}

input ArticleListRelationFilter {
  every: ArticleWhereInput
  none: ArticleWhereInput
  some: ArticleWhereInput
}

input ArticleUpdateInput {
  abstract: StringFieldUpdateOperationsInput
  abstractEmbedding: ArticleUpdateabstractEmbeddingInput
  authors: AuthorUpdateManyWithoutArticlesInput
  citation: IntFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  journal: JournalUpdateOneWithoutArticlesInput
  name: StringFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutArticlesInput
}

input ArticleUpdateManyMutationInput {
  abstract: StringFieldUpdateOperationsInput
  abstractEmbedding: ArticleUpdateabstractEmbeddingInput
  citation: IntFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input ArticleUpdateabstractEmbeddingInput {
  set: [Float!]
}

input ArticleWhereInput {
  AND: [ArticleWhereInput!]
  NOT: [ArticleWhereInput!]
  OR: [ArticleWhereInput!]
  abstract: StringFilter
  abstractEmbedding: FloatNullableListFilter
  authors: AuthorListRelationFilter
  citation: IntFilter
  date: DateTimeFilter
  id: StringFilter
  journal: JournalWhereInput
  journalId: StringNullableFilter
  name: StringFilter
  tags: TagListRelationFilter
}

input ArticleWhereUniqueInput {
  id: String
}

type Author {
  articles(after: ArticleWhereUniqueInput, before: ArticleWhereUniqueInput, first: Int, last: Int): [Article!]!
  id: String!
  name: String!
}

input AuthorCreateNestedManyWithoutArticlesInput {
  connect: [AuthorWhereUniqueInput!]
  connectOrCreate: [AuthorCreateOrConnectWithoutArticlesInput!]
  create: [AuthorCreateWithoutArticlesInput!]
}

input AuthorCreateOrConnectWithoutArticlesInput {
  create: AuthorCreateWithoutArticlesInput!
  where: AuthorWhereUniqueInput!
}

input AuthorCreateWithoutArticlesInput {
  id: String!
  name: String!
}

input AuthorListRelationFilter {
  every: AuthorWhereInput
  none: AuthorWhereInput
  some: AuthorWhereInput
}

input AuthorScalarWhereInput {
  AND: [AuthorScalarWhereInput!]
  NOT: [AuthorScalarWhereInput!]
  OR: [AuthorScalarWhereInput!]
  id: StringFilter
  name: StringFilter
}

input AuthorUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input AuthorUpdateManyWithWhereWithoutArticlesInput {
  data: AuthorUpdateManyMutationInput!
  where: AuthorScalarWhereInput!
}

input AuthorUpdateManyWithoutArticlesInput {
  connect: [AuthorWhereUniqueInput!]
  connectOrCreate: [AuthorCreateOrConnectWithoutArticlesInput!]
  create: [AuthorCreateWithoutArticlesInput!]
  delete: [AuthorWhereUniqueInput!]
  deleteMany: [AuthorScalarWhereInput!]
  disconnect: [AuthorWhereUniqueInput!]
  set: [AuthorWhereUniqueInput!]
  update: [AuthorUpdateWithWhereUniqueWithoutArticlesInput!]
  updateMany: [AuthorUpdateManyWithWhereWithoutArticlesInput!]
  upsert: [AuthorUpsertWithWhereUniqueWithoutArticlesInput!]
}

input AuthorUpdateWithWhereUniqueWithoutArticlesInput {
  data: AuthorUpdateWithoutArticlesInput!
  where: AuthorWhereUniqueInput!
}

input AuthorUpdateWithoutArticlesInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input AuthorUpsertWithWhereUniqueWithoutArticlesInput {
  create: AuthorCreateWithoutArticlesInput!
  update: AuthorUpdateWithoutArticlesInput!
  where: AuthorWhereUniqueInput!
}

input AuthorWhereInput {
  AND: [AuthorWhereInput!]
  NOT: [AuthorWhereInput!]
  OR: [AuthorWhereInput!]
  articles: ArticleListRelationFilter
  id: StringFilter
  name: StringFilter
}

input AuthorWhereUniqueInput {
  id: String
}

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input FloatNullableListFilter {
  equals: [Float!]
  has: Float
  hasEvery: [Float!]
  hasSome: [Float!]
  isEmpty: Boolean
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

type Journal {
  articles(after: ArticleWhereUniqueInput, before: ArticleWhereUniqueInput, first: Int, last: Int): [Article!]!
  id: String!
  name: String!
}

input JournalCreateNestedOneWithoutArticlesInput {
  connect: JournalWhereUniqueInput
  connectOrCreate: JournalCreateOrConnectWithoutArticlesInput
  create: JournalCreateWithoutArticlesInput
}

input JournalCreateOrConnectWithoutArticlesInput {
  create: JournalCreateWithoutArticlesInput!
  where: JournalWhereUniqueInput!
}

input JournalCreateWithoutArticlesInput {
  id: String!
  name: String!
}

input JournalUpdateOneWithoutArticlesInput {
  connect: JournalWhereUniqueInput
  connectOrCreate: JournalCreateOrConnectWithoutArticlesInput
  create: JournalCreateWithoutArticlesInput
  delete: Boolean
  disconnect: Boolean
  update: JournalUpdateWithoutArticlesInput
  upsert: JournalUpsertWithoutArticlesInput
}

input JournalUpdateWithoutArticlesInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input JournalUpsertWithoutArticlesInput {
  create: JournalCreateWithoutArticlesInput!
  update: JournalUpdateWithoutArticlesInput!
}

input JournalWhereInput {
  AND: [JournalWhereInput!]
  NOT: [JournalWhereInput!]
  OR: [JournalWhereInput!]
  articles: ArticleListRelationFilter
  id: StringFilter
  name: StringFilter
}

input JournalWhereUniqueInput {
  id: String
}

type Mutation {
  deleteManyArticle(where: ArticleWhereInput): AffectedRowsOutput!
  deleteOneArticle(where: ArticleWhereUniqueInput!): Article
  updateManyArticle(data: ArticleUpdateManyMutationInput!, where: ArticleWhereInput): AffectedRowsOutput!
  upsertOneArticle(create: ArticleCreateInput!, update: ArticleUpdateInput!, where: ArticleWhereUniqueInput!): Article!
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Query {
  article(where: ArticleWhereUniqueInput!): Article
  articles(after: ArticleWhereUniqueInput, before: ArticleWhereUniqueInput, first: Int, last: Int, orderBy: [QueryArticlesOrderByInput!]): [Article!]!
  authors(after: AuthorWhereUniqueInput, before: AuthorWhereUniqueInput, first: Int, last: Int, orderBy: [QueryAuthorsOrderByInput!]): [Author!]!
  journals(after: JournalWhereUniqueInput, before: JournalWhereUniqueInput, first: Int, last: Int, orderBy: [QueryJournalsOrderByInput!]): [Journal!]!
  multipleArticles(where: [String]): [Article]
  tags(after: TagWhereUniqueInput, before: TagWhereUniqueInput, first: Int, last: Int, orderBy: [QueryTagsOrderByInput!], where: QueryTagsWhereInput): [Tag!]!
}

input QueryArticlesOrderByInput {
  name: SortOrder
}

input QueryAuthorsOrderByInput {
  name: SortOrder
}

input QueryJournalsOrderByInput {
  name: SortOrder
}

enum QueryMode {
  default
  insensitive
}

input QueryTagsOrderByInput {
  name: SortOrder
}

input QueryTagsWhereInput {
  articles: ArticleListRelationFilter
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Tag {
  articles(after: ArticleWhereUniqueInput, before: ArticleWhereUniqueInput, first: Int, last: Int): [Article!]!
  id: String!
  name: String!
}

input TagCreateNestedManyWithoutArticlesInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutArticlesInput!]
  create: [TagCreateWithoutArticlesInput!]
}

input TagCreateOrConnectWithoutArticlesInput {
  create: TagCreateWithoutArticlesInput!
  where: TagWhereUniqueInput!
}

input TagCreateWithoutArticlesInput {
  id: String!
  name: String!
}

input TagListRelationFilter {
  every: TagWhereInput
  none: TagWhereInput
  some: TagWhereInput
}

input TagScalarWhereInput {
  AND: [TagScalarWhereInput!]
  NOT: [TagScalarWhereInput!]
  OR: [TagScalarWhereInput!]
  id: StringFilter
  name: StringFilter
}

input TagUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TagUpdateManyWithWhereWithoutArticlesInput {
  data: TagUpdateManyMutationInput!
  where: TagScalarWhereInput!
}

input TagUpdateManyWithoutArticlesInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutArticlesInput!]
  create: [TagCreateWithoutArticlesInput!]
  delete: [TagWhereUniqueInput!]
  deleteMany: [TagScalarWhereInput!]
  disconnect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutArticlesInput!]
  updateMany: [TagUpdateManyWithWhereWithoutArticlesInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutArticlesInput!]
}

input TagUpdateWithWhereUniqueWithoutArticlesInput {
  data: TagUpdateWithoutArticlesInput!
  where: TagWhereUniqueInput!
}

input TagUpdateWithoutArticlesInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TagUpsertWithWhereUniqueWithoutArticlesInput {
  create: TagCreateWithoutArticlesInput!
  update: TagUpdateWithoutArticlesInput!
  where: TagWhereUniqueInput!
}

input TagWhereInput {
  AND: [TagWhereInput!]
  NOT: [TagWhereInput!]
  OR: [TagWhereInput!]
  articles: ArticleListRelationFilter
  id: StringFilter
  name: StringFilter
}

input TagWhereUniqueInput {
  id: String
}
